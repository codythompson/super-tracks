uses Plasmacore

class TilePointerEvent : PointerEvent
  PROPERTIES
    tileInfo: TrackTileInfo
  METHODS
    method init( original:PointerEvent, @tileInfo )
      type = original.type
      position = original.position
      delta = original.delta
      index = original.index
endClass

class EventManager(tileMap:TileMapLayout, graph:TrackGraph)
  PROPERTIES
    pointerListeners = Table<<Int32, Function(TilePointerEvent)[]>>()

  METHODS
    method onPointer( type:Int32, listener:Function(TilePointerEvent) )->Int32
      if (not pointerListeners.contains(type)) pointerListeners[type] = (Function(TilePointerEvent))[]()
      pointerListeners[type].add(listener)
      return pointerListeners[type].count - 1

    method removePointer( type:Int32, index:Int32 )
      pointerListeners[type].remove_at(index)
      # if (pointerListeners[type].count == 0) pointerListeners.remove(type)

    method fire( e:TilePointerEvent )
      local type = e.type
      if (not pointerListeners.contains(type)) return
      forEach(listener in pointerListeners[type])
        listener(e)
      endForEach

    method handlePointerEvent( e:PointerEvent )
      local ij = IJ(tileMap.screen_to_map( e.position ))
      local tileInfo = graph.calcLayout(ij)
      local tileTouchEvent = TilePointerEvent(e, tileInfo)
      fire(tileTouchEvent)

endClass