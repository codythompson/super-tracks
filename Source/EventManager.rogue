uses Plasmacore

class TilePointerEvent : PointerEvent
  PROPERTIES
    tileInfo: TrackTileInfo
    #{
      // TODO see if we can extend the enums like so
      enum {
        TRAIN_ENTER = 3
        TRAIN_EXIT = 4
      }
    }#
  METHODS
    method init( original:PointerEvent, @tileInfo )
      type = original.type
      position = original.position
      delta = original.delta
      index = original.index
endClass

class EventManager(tileMap:TileMapLayout, graph:TrackGraph)
  PROPERTIES
    listeners = Table<<Int32, Function(TilePointerEvent)[]>>()

  METHODS
    method on( type:Int32, listener:Function(TilePointerEvent) )->Int32
      if (not listeners.contains(type)) listeners[type] = (Function(TilePointerEvent))[]()
      listeners[type].add(listener)
      return listeners[type].count - 1

    method remove( type:Int32, index:Int32 )
      listeners[type].remove_at(index)
      # if (listeners[type].count == 0) listeners.remove(type)

    method fire( e:TilePointerEvent )
      local type = e.type
      if (not listeners.contains(type)) return
      forEach(listener in listeners[type])
        listener(e)
      endForEach

    method handlePointerEvent( e:PointerEvent )
      local ij = IJ(tileMap.screen_to_map( e.position ))
      local tileInfo = graph.calcLayout(ij)
      local tileTouchEvent = TilePointerEvent(e, tileInfo)
      fire(tileTouchEvent)

endClass