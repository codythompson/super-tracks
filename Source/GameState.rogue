uses Plasmacore

class GameState (playerCart:GameObj, switchIcons:Table<<TrackConnection,Image>>) : State<<MainScreen>>
  PROPERTIES
    tapListenerID:Int32
    throttleChangeID:Int32
    derailListenerID:Int32
    throttleSlider = UISlider().[
      topValue = 0.1
      bottomValue = 0.0
      left = 0.95
    ]

  METHODS
    method on_start
      tapListenerID = Events.on(TilePointerEvent.RELEASE, this=>handleTileRelease)

      playerCart.moveTo(8, 13)
      screen.tileMap.camera = playerCart.ij
      screen.tileMap.scale = 0.75
      forEach(image in playerCart.images)
        image.scale = 0.75
      endForEach
      throttleSlider.value = playerCart.speed
      screen.baseUI.add(throttleSlider)
      throttleChangeID = throttleSlider.onChange(this=>handleThrottleChange)

      derailListenerID = Events.on(this=>handlePlayerDerail, "PLAYER")

    method on_finish
      Events.removeTileEventListener(TilePointerEvent.RELEASE, tapListenerID)
      Events.removeDerailListener("PLAYER", derailListenerID)
      throttleSlider.removeChangeListener(throttleChangeID)
      screen.baseUI.remove(throttleSlider)

    method handleSwitchTap( e:TilePointerEvent )
      local node = e.tileInfo.node
      node.activeExitIndex++
      node.activeExitIndex %= node.exitPairs.count

    method handleTileRelease( e:TilePointerEvent )
      if (e.tileInfo.node? and e.tileInfo.node.exitPairs.count > 1) handleSwitchTap(e)

    method handleThrottleChange( newSpeed:Real64 )
      playerCart.speed = newSpeed

      method handlePlayerDerail( e:DerailEvent )
      println("DERAILED at $,$" (e.tileInfo.i, e.tileInfo.j))
      change_state(DerailedState())

endClass