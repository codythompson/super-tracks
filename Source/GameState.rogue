uses Plasmacore

class GameState : State<<MainScreen>>
  # GLOBAL PROPERTIES
  #   colors = Color[][
  #     Color.BLACK,
  #     Color.BLUE,
  #     Color.BROWN,
  #     Color.CYAN,
  #     Color.DARK_GRAY,
  #     Color.DARK_GREEN,
  #     Color.GRAY,
  #     Color.GREEN,
  #     Color.LIGHT_GRAY,
  #     Color.LIME,
  #     Color.MAGENTA,
  #     Color.ORANGE,
  #     Color.PURPLE,
  #     Color.RED,
  #     Color.TRANSPARENT,
  #     Color.YELLOW,
  #     Color.WHITE
  #   ]

  PROPERTIES
    tileMap = TileMapLayout(100, 100, XY(100, 100))
    tileDrawer:TileDrawer
    gameObjs = GameObj[]
    mover:GameObjMover

  METHODS
    method on_start
      tileDrawer = BetterTileDrawer(Atlases.parse(Atlases.level_0), trackDbl)
      minecartObj.ij = XY(2, 6)
      gameObjs.add(minecartObj)
      minecartObj.vel.x = 0.01
      # minecartObj.vel = 0.01
      mover = LinearObjMover()

    method on_update
      forEach(obj in gameObjs)
        mover.moveObj(obj, tileDrawer.graph)
      endForEach

    method on_draw
      Display.clear( Color.DARK_GRAY )
      tileMap.draw(tileDrawer.drawFunc)
      forEach(i in 0..<tileDrawer.graph.tilesWide)
        forEach(j in 0..<tileDrawer.graph.tilesHigh)
          local tInfo = tileDrawer.graph.calcLayout(i,j)
          if (tInfo.activeExit != TrackConnection.NONE)
            Box(tileMap.map_to_screen(tInfo.exitIJ), XY(10,10)).fill(Color.RED)
          endIf
        endForEach
      endForEach
      forEach(obj in gameObjs)
        obj.draw(tileMap)
      endForEach

    method on( e:KeyEvent )
      change_state( GameState() )
endClass